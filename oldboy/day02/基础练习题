#基础练习题一
#1.执行python脚本的两种方式
./xxx.py
python xxx.py
#2.简述位，字节的关系
8位=1字节
#3.简述ascii,unicode,utf-8,gbk关系
ascii 最小1字节
unicode 最小2字节
utf-8 对unicode的压缩，最小1字节，中文3字节
gbk 中文2字节
#4.请写出“李杰”分别用utf-8和gbk编码占用的位数
utf-8 6字节
gbk   4字节
#5.python单行注释和多行注释分别用什么？
单行：#
多行：""""""
#6.声明变量注意事项有哪些？
字母，数字，下划线组成。数字不能开头，不能用内置特殊字符
#7.如有一下变量n1=5,请使用int的提供的方法，得到该变量最少可以用多少个二进制表示？
print(n1.bit_length())
#8.布尔值分别有什么？
True，False
#9.阅读代码，请写出执行结果
    a = "alex"
    b = a.capltalize()
    print(a) Alex
    print(b) alex
#10.写代码，有如下变量，请按照要求实现每个功能
name = "aleX"
a.移除name变量对应的值两边的空格，并输入移除后的内容
    v = name.strip()
    print(name)
b.判断name变量对应的值是否以"al"开头，并输出结果
    v =name.startswith()
    print(v)
c.判断name变量对应的值是否以"X"结尾，并输出结果
    v = name.endswith()
    print(v)
d.将name变量对应的值中的"l"替换为"p",并输出结果
    v = name.replace('l','p')
    print(name)
e.将name变量对应的值根据"l"分割，并输出结果。
    v = name.partition('l')
    print(v)
f.请问，上一题e分割之后得到值是什么类型？
    列表
g.将name变量对应的值变大写，并输出结果
    v = name.upper()
    print(name)
h.将name变量对应的值变小写，并输出结果
    v = name.lower()
    print(name)
i.请输出name变量对应的值的第2个字符？
    v= name[1]
    print(v)
j.请输出name变量对应的值的前3个字符？
    v = name[0:2]
    print(v)
k.请输出name变量对应的值的后2个字符？
    v =name[3:1:-1]
    print(v)
l.请输出name变量对应的值中"e"所在索引位置？
    v = name.find(e)
    print(v)
m.获取子序列，仅不包含最后一个字符。如:oldboy则获取oldbo
    v = name.strip('x')
    print(v)
11.字符串是否可迭代对象？如可以请使用for循环每一个元素？
    是
    for i in name:
        print(i)
12.请用代码实现：
   a.利用下划线将列表的每一个元素拼接成字符串，li = ['alex','eric','rain']
    v = '_'.join(li)
    print(v)
13.Python2中的range和Python3中的range的区别？
    2中range会先数出来写进内存
    3中range是循环一个数一个写一个，相当于2中的xrange
14.实现一个整数加法计算器：
    如：
        content = input('请输入内容：')如：5+9
        v = content.partition('+')
        v1 = int(v[0]) + int(v[2])
        print(v1)
！！！15.计算用户输入的内容中有几个十进制小数？几个字母？
    如：
        content = input('请输入内容：') #如：asduiaf878123jkjsfd-213928
16.简述int和9等数字以及str和‘xxoo’等字符串的关系？
           9是int类的对象
           xxoo是str类的对象
17.制作趣味模版程序
    需求：等待用户输入名字，地点，爱好，根据用户的名字和爱好进行任意现实
        如：敬爱可亲的xx，最喜欢在xx地方干xxx
     name = input("请输入名字：")
     place = input("请输入地点：")
     like = input("请输入爱好：")
     tpl = "敬爱可亲的｛name1｝,最喜欢在{place1}地方干{like1}"
     v = tpl.format(name1=name,place1=place,like1=like)
     print(v0
18.制作随机验证码，不区分大小写。
    流程：
        -用户执行程序
        -给用户显示需求输入的验证码
        -用户输入的值
            用户输入的值和显示的值相同时实现正确信息：否则继续生成随机验证码继续等待用户输入

    while True:
    def check_code():
        import random
        checkcode = ''
        for i in range(4):
            current = random.randrange(0,4)
            if current != i:
                temp = chr(random.randint(65,90))
            else:
                temp = random.randint(0,9)
            checkcode += str(temp)
        return checkcode

    code = check_code()

    print(code)
    code1 =code.lower()
    v = input("请输入验证码：")
    v1 = v.lower()
    if v1 == code1:
        print("欢迎登陆")
        break
    else:
        print("验证码错误，请重新输入")
19.开发敏感词语过滤程序，提示用户输入内容，如果用户输入的内容中包含特殊的字符：
    如：“苍老师”“东京热”，则将内容替换为***

    v = input("请输入内容：")
    i = ['苍老师','东京热']
    for item in i:
        if item in v:
            v = v.replace(item,'***')

    print(v)
20.制作表格
    循环提示用户输入：用户名，密码，邮箱（要求用户输入的长度不超过20个字符，如果超过则只有前20个字符有效）
    如果用户输入q或Q表示不再继续输入，将用户输入的内容以表格形式打印

    while True:
    v1 = input("请输入用户名：（不可超过20个字符）")
    v2 = input("请输入密码：")
    v3 = input("请输入邮箱：")

    v = [v1,v2,v3,]
    v4 = "\t".join(v)
    v5 = v4.expandtabs(40)

    print(v5)
    exit()

    #基础练习题2
    1.请用代码实现：利用下划线将列表的每一个元素拼接成字符串，li = ['alex','eric','rain']
        v = "_".join(li)
        print(v)
    !!!2.查找列表中元素，移除每个元素的空格，并查找以a或A开头并且以c结尾的所有元素。
        li = ['alec','aric','Alex','Tony','rain']
        tu = ('alec','aric','Alex','Tony','rain')
        dic = {'k1':'alex','k2':'aric','k3':'Alex','k4':'Tony'}
 3.写代码，有如下列表，按要求实现每一个功能
        li = ['alex','eric','rain']
        a.计算列表长度并输出
           v =  len(li)
           print(v)
        b.列表中追加元素“seven”，并输出添加后的列表
           v = li.append('seven')
           print(li)
        c.请在列表的第1个位置插入元素“Tony”,并输出添加后的列表
            li = ['alex','eric','rain']
            v = li.insert(0,'Tony')
            print(li)
        d..请修改列表第2个位置的元素为“Kelly”，并输出修改后的列表
            li[1] = 'Kelly'
            print(li)
        e.请删除列表中的元素‘eric’，并输出修改后的列表
            v = li.remove('eric')
            print(li)
        f.请删除列表中的第2个元素，并输出删除的元素的值和删除元素后的列表
            v = li.pop(1)
            print(v)
            print(li)
        g.请删除列表中的第3个元素，并输出删除元素后的列表
            v = li.pop(2)
            print(li)
        h.请删除列表中的第2至4个元素，并输出删除元素后的列表
            del li[1:3]
            print(li)
        i.请将列表所有的元素反转，并输出反转后的列表
            v = li.reverse()
            print(li)
        j.请使用for,len,range输出列表的索引
            for i in range(0,len(li))
                print(i)
        k.请使用enumrate输出列表元素和序号（序号从100开始）
            li = ['eric','alex','tony']
            for i,ele in enumerate(li,100):
                print(i,ele)
        l.请使用for循环输出列表的所有元素
            for i in li:
                print(i)
4.写代码，有如下列表，请按照功能要求实现每一个功能
        li = ['hello','seven',['mon',['h','kelly'],'all'],123,446]
        a.请根据索引输出'Kelly'
            v = li[2][1][1]
            print(v)
        b.请使用索引找到‘all’元素并将其修改为‘ALL’，如：li[0][1][9]...
            li[2][2] = 'all'
            print(li)
5.写代码，有如下元组，按照要求实现每一个功能
        tu = ('alex','eric','rain')
        a.计算元组长度并输出
            v = len(tu)
            print(v)
        b.获取元组的第2个元素，并输出
            v = tu[1]
            print(v)
        c.获取元组的第1-2个元素，并输出
            v = tu[0:1]
            print(v)
        d.请使用for输出元组的元素
            for i in tu:
                print(i)
        e.请使用for,len,range输出元组的索引
            for i in range(0,len(tu)):
                print(i)
        f.请使用enumrate输出元组元素和序号（序号从10开始）
            for i,ele in enumrate(i,10)
                print(i,ele)
6,有如下变量，请实现要求的功能
        tu = ('alex',[11,22,{'k1':'v1','k2':['age','name'],'k3':(11,22,33)},44])
        a.讲述元组的特性
            不可以更改类型
        b.请问tu变量中的第一个元素‘alex’是否可被修改？
            不可以
        c.请问tu变量中的“k2”对应的值是什么类型？是否可以被修改？如果可以，请在其中添加一个元素“Seven”
               列表类型，可以被修改
               v = tu[1][2].get('k2')
               v1 = v.append('Seven')
               print(tu)
        d..请问tu变量中的"K3"对应的值是什么类型？是否可以被修改？如果可以，请在其中添加一个元素“Seven”
                元组类型，不可以被修改
7.字典
    dic = {'k1':'v1','k2':'v2','k3':[11,22,33]}
        a.请循环输出所有的key
            for i in dic:
                print(i)
        b.请循环输出所有的value
            dic = {'k1':'v1','k2':'v2','k3':[11,22,33]}
            for i in dic.values():
                print(i)
        c.请循环输出所有的key和value
            dic = {'k1':'v1','k2':'v2','k3':[11,22,33]}
            for key,value in dic.items():
                print(key,value)
        d.请在字典中添加一个键值对，“k4”：‘v4’，输出添加后的字典
            dic = {'k1':'v1','k2':'v2','k3':[11,22,33]}
            v = dic.setdefault('k4','v4')
            print(dic)
        e.请在修改字典中‘k1’对应的值为‘alex’，输出修改后的字典
            dic = {'k1':'v1','k2':'v2','k3':[11,22,33]}
            v = dic.update({'k1':'alex'})
            print(dic)
        f.请在k3对应的值中追加一个元素44，输出修改后的字典
            dic = {'k1':'v1','k2':'v2','k3':[11,22,33]}
            v = dic.get('k3')
            v1 = v.append(44)
            print(dic)
        g.请在k3对应的值的第1个位置插入个元素18，输出修改后的字典
            dic = {'k1':'v1','k2':'v2','k3':[11,22,33]}
            v = dic.get('k3')
            v1 = v.insert(0,18)
            print(dic)
8.转换
        a.将字符串s = 'alex'转换成列表
            v = list(s)
            print(v)
        b.将字符串s = 'alex'转换成元组
            s = 'alex'
            v = tuple(s,)
            v2 = type(v)
            print(v2)
        c.将列表li = ['alex','seven']转换成元组
            v = tuple(li)
            v2 = type(v)
            print(v2)
        d.将元组tu = ('Alex','seven')转换成列表
            v = list(tu)
            v2 = type(v)
            print(v2)
        e.将列表li = ['alex','seven']转换成字典且字典的key按照10开始向后递增
