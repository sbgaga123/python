1 yield的表达式用法=》协程函数
    只要函数内有yield关键字，函数名()得到的结果就是生成器
    生成器本质就是迭代器

    def func():
        while True:
            x=yield 1
            print(x)
    g=func()
    next(g)
    g.send(123)

    面向过程：流水线式

2 lambda
    lambda x,y=1:x+y
    dic={
        'a':1,
        'b':2,
        'c':3,
    }
    max(dic,key=lambda k:dic[k])

3 递归调用
   在函数调用过程中直接或间接地调用自己是就是递归调用
   需要注意的问题：
        1 必须要有一个明确的结束条件
        2 每次递归，问题的规模要减少

   python中的递归：
        没有尾递归调用优化

   递归的两个阶段：
        递推
        回溯
4 模块与包的使用
    import
    from ... import ...

    常见模块分类：
        内置模块
        自定义模块
        第三方模块

    导入模块：test.py
        #a.py
        import test
        导入模块干的事情：
             1 产生新的名称空间
             2 执行test.py的代码，以1产生的名称空间为准
             3 定义一个模块名，指向1产生的名称空间

        使用：
            x=1
            test.x

        from test import x

    导入包：
        包是包含有__init__.py文件的目录
        包的用途：是从目录级别组织模块
        包就相当于一个大的模块，本质还是给使用者导入来使用的

        import 包.包.子文件.名字 #报错，点的左边必须是包
        import 包.包.子文件


4.1 模块的搜索路径
    import a #内存---->内置----->sys.path


5 正则